<?xml version="1.0" encoding="UTF-8"?>
<!--
/* ===========================================================
 * $Id$
 * This file is part of Micrite
 * ===========================================================
 *
 * (C) Copyright 2009, by Gaixie.org and Contributors.
 * 
 * Project Info:  http://micrite.gaixie.org/
 *
 * Micrite is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Micrite is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Micrite.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
-->  

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.gaixie.micrite</groupId>
		<artifactId>micrite-parent</artifactId>
		<version>0.1-SNAPSHOT</version>
	</parent>

	<groupId>org.gaixie.micrite</groupId>
	<artifactId>micrite-modules</artifactId>
	<name>Micrite Modules</name>
	<packaging>pom</packaging>

	<modules>
		<module>micrite-beans</module>
		<module>micrite-core</module>
		<module>micrite-common</module>
		<module>micrite-security</module>
		<module>micrite-crm</module>
	</modules>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<executions>
						<execution>
							<id>gen-resources</id>
							<phase>generate-resources</phase>
							<configuration>
								<tasks>
									<property name="common.resources" value="../micrite-common/src/main/" />

									<echo message="***Copy hibernate resources from common module***" />
									<copy todir="${project.basedir}/src/main/resources"
										file="${common.resources}/resources/databaseResource-hibernate.xml" />
									<copy todir="${project.basedir}/src/main/resources"
										file="${common.resources}/resources/hibernate.properties" />
									<copy todir="${project.basedir}/src/main/scripts/sql">
										<fileset dir="${common.resources}/scripts/sql" />
									</copy>


									<echo message="***Unzipping extjs.zip***" />
									<unzip src="${common.resources}/scripts/extjs.zip"
										dest="${project.build.directory}/${project.artifactId}-${project.version}/js-lib">
									</unzip>

								</tasks>
							</configuration>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>

						<execution>
							<id>gen-dbscripts</id>
							<phase>compile</phase>
							<configuration>
								<tasks>
									<property name="build.dbscripts"
										value="${project.build.directory}/classes/dbscripts" />
									<mkdir dir="${build.dbscripts}" />

									<!--
										need a directory for each db to exist before generation can
										happen
									-->
									<mkdir dir="${build.dbscripts}/derby" />
									<mkdir dir="${build.dbscripts}/mssql" />
									<mkdir dir="${build.dbscripts}/mysql" />
									<!-- <mkdir dir="${build.dbscripts}/oracle" /> -->
									<mkdir dir="${build.dbscripts}/postgresql" />

									<path id="texen.path">
										<fileset dir="${project.build.directory}/lib" />
										<pathelement location="${project.basedir}/src/main/scripts/sql/" />
										<pathelement location="${project.basedir}/src/main/scripts/sql/database" />
									</path>
									<taskdef name="texen" classname="org.apache.velocity.texen.ant.TexenTask"
										classpathref="texen.path"/>

									<texen controlTemplate="control.vm"
										contextProperties="${project.basedir}/src/main/scripts/sql/dbscripts.properties"
										useClasspath="true" inputEncoding="UTF-8" outputDirectory="${build.dbscripts}"
										outputFile="README.txt" />

									<!-- just copy over the droptables script -->
									<copy todir="${build.dbscripts}"
										file="${project.basedir}/src/main/scripts/sql/droptables.sql" />
								</tasks>
							</configuration>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>


						<execution>
							<id>del-tmp-resources</id>
							<phase>compile</phase>
							<configuration>
								<tasks>
									<echo message="***Deleting tmp files***" />
									<delete includeEmptyDirs="true">
										<fileset dir="${project.basedir}/src/main/resources">
											<include name="databaseResource-hibernate.xml" />
											<include name="hibernate.properties" />
										</fileset>
										<fileset dir="${project.basedir}/src/main/scripts" />
										<fileset dir="${project.build.directory}/lib" />
									</delete>
								</tasks>
							</configuration>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>
</project>