<?xml version="1.0" encoding="UTF-8"?>
<!--
/* ===========================================================
 * $Id$
 * This file is part of Micrite
 * ===========================================================
 *
 * (C) Copyright 2009, by Gaixie.org and Contributors.
 * 
 * Project Info:  http://micrite.gaixie.org/
 *
 * Micrite is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Micrite is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Micrite.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
--> 

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.gaixie.micrite</groupId>
        <artifactId>micrite-modules</artifactId>
        <version>0.1-SNAPSHOT</version>
    </parent>

	<groupId>org.gaixie.micrite</groupId>
    <artifactId>micrite-common</artifactId>
    <name>Micrite Modules :: Common</name>
    <packaging>jar</packaging>

	<properties>
        <jdbc.driverClassName>org.apache.derby.jdbc.EmbeddedDriver</jdbc.driverClassName>
        <jdbc.url>jdbc:derby:${project.build.directory}/micrite_db</jdbc.url>
        <jdbc.username>derby</jdbc.username>
        <jdbc.password>derby</jdbc.password>
        <hibernate.dialect>org.hibernate.dialect.DerbyDialect</hibernate.dialect>
    </properties>

    <dependencies>
       		                	         
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>

	          <!-- sql-maven-plugin -->  
		      <plugin>
		        <groupId>org.codehaus.mojo</groupId>
		        <artifactId>sql-maven-plugin</artifactId>
		        <version>1.3</version>
		
		        <dependencies>
		          <!-- specify the dependent jdbc driver here -->
		          <dependency>
		            <groupId>org.apache.derby</groupId>
		            <artifactId>derby</artifactId>
					<version>10.4.2.0</version>
		          </dependency>
		        </dependencies>
		
		        <!-- common configuration shared by all executions -->
		        <configuration>
		          <driver>${jdbc.driverClassName}</driver>
		          <url>${jdbc.url};create=true;user=${jdbc.username};password=${jdbc.password}</url>
		          <encoding>UTF-8</encoding>
		          <!-- <username>postgres</username>
		          <password>password</password> -->
		          <!-- You can comment out username/password configurations and
		               have maven to look them up in your settings.xml using ${settingsKey}
		          -->
		          <settingsKey>sensibleKey</settingsKey>
		          <!--all executions are ignored if -Dmaven.test.skip=true-->
		          <skip>${maven.test.skip}</skip>
		        </configuration>
		
		        <executions>
		          <execution>
		            <id>drop-schema</id>
		            <phase>process-test-resources</phase>
		            <goals>
		              <goal>execute</goal>
		            </goals>
		            <configuration>
		              <autocommit>true</autocommit>
		              <srcFiles>
		                <srcFile>src/main/scripts/derby/derby-drop.sql</srcFile>
		              </srcFiles>
		              <!-- ignore error when database is not avaiable -->
		              <onError>continue</onError>
		            </configuration>
		          </execution>
		
		          <execution>
		            <id>create-schema</id>
		            <phase>process-test-resources</phase>
		            <goals>
		              <goal>execute</goal>
		            </goals>
		            <configuration>
		              <autocommit>true</autocommit>
		              <srcFiles>
		                <srcFile>src/main/scripts/derby/derby-create.sql</srcFile>
		              </srcFiles>
		              <onError>continue</onError>
		            </configuration>
		          </execution>
		
		          <execution>
		            <id>create-data</id>
		            <phase>process-test-resources</phase>
		            <goals>
		              <goal>execute</goal>
		            </goals>
		            <configuration>
		              <autocommit>true</autocommit>
		              <srcFiles>
		                <srcFile>src/main/scripts/derby/derby-init.sql</srcFile>
		              </srcFiles>
		              <onError>continue</onError>
		            </configuration>
		          </execution>
		          
		          <!-- Shutdown DB in order to be able to run unit tests -->
		          <execution>
                    <id>shutdown-database-sothat-test-can-run</id>
                    <phase>process-test-resources</phase>
                    <goals>
                      <goal>execute</goal>
                    </goals>
                    <configuration>
                      <url>${jdbc.url};shutdown=true;user=${jdbc.username};password=${jdbc.password}</url>
                      <skipOnConnectionError>true</skipOnConnectionError>
                    </configuration>
                  </execution>
		          
		        </executions>
		      </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
		      
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                	<include>databaseResource-hibernate.xml</include>
                	<include>hibernate.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                	<exclude>databaseResource-hibernate.xml</exclude>
                	<exclude>hibernate.properties</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/scripts</directory>
            </resource>            
        </resources>        
    </build>

</project>