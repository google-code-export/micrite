<?xml version="1.0" encoding="UTF-8"?>
<!--
/* ===========================================================
 * $Id$
 * This file is part of Micrite
 * ===========================================================
 *
 * (C) Copyright 2009, by Gaixie.org and Contributors.
 * 
 * Project Info:  http://micrite.gaixie.org/
 *
 * Micrite is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Micrite is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Micrite.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
-->

<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">
	
	<beans:bean id="loggerListener" class="org.springframework.security.event.authentication.LoggerListener" />
	
	<http access-denied-page="/403.jsp" >
		<intercept-url pattern="/security/login.jsp" filters="none" />
		<intercept-url pattern="/security/images/**" filters="none" />
		<intercept-url pattern="/js-lib/**" filters="none" />
	    <form-login login-page="/j_spring_security_logout" authentication-failure-url="/loginFailed.action" default-target-url="/loginSuccess.action"  />
	    <logout logout-success-url="/security/login.jsp"/>
	    <http-basic />
	    <remember-me key="e37f4b31-0c45-11dd-bd0b-0800200c9a66" />
	</http>
	
	<!-- 创建DaoAuthenticationProvider实例, 设置userDetailsService的引用：securityManager.
	(securityManager bean 须继承UserDetailsService)-->	
	<authentication-provider user-service-ref="securityManager"> 
		<password-encoder hash="md5"/>
	</authentication-provider>
	
	<authentication-manager alias="authenticationManager"/>

	<beans:bean id="accessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
	    <beans:property name="allowIfAllAbstainDecisions" value="false"/>
	    <beans:property name="decisionVoters">
	        <beans:list>
	            <beans:bean class="org.springframework.security.vote.RoleVoter"/>
	            <beans:bean class="org.springframework.security.vote.AuthenticatedVoter"/>
	        </beans:list>
	    </beans:property>
	</beans:bean>
	<beans:bean id="resourceSecurityInterceptor" class="org.springframework.security.intercept.web.FilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager"/>
	    <beans:property name="accessDecisionManager" ref="accessDecisionManager"/>
	    <beans:property name="objectDefinitionSource" ref="secureResourceFilterInvocationDefinitionSource" />
	    <beans:property name="observeOncePerRequest" value="false" />
	    <custom-filter after="LAST" />
	</beans:bean>
	
	<beans:bean id="secureResourceFilterInvocationDefinitionSource" class="org.gaixie.micrite.security.filter.SecureResourceFilter" />
</beans:beans>
